{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shaku\\\\Documents\\\\React JS Apps\\\\Reflect\\\\src\\\\apps\\\\DateApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from 'react';\nimport { getAppSettings } from '../data/apps';\nimport { useTheme } from '../context/ThemeContext';\nimport { useElementSize } from '../hooks/useElementSize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DateApp = ({\n  appId = 'date'\n}) => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [settings, setSettings] = useState(getAppSettings(appId));\n  const {\n    theme\n  } = useTheme();\n  const {\n    ref,\n    width,\n    height\n  } = useElementSize();\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setDate(new Date());\n    }, 60000); // Update every minute\n\n    return () => clearInterval(timer);\n  }, []);\n  useEffect(() => {\n    setSettings(getAppSettings(appId));\n  }, [appId]);\n\n  // Live update when settings change elsewhere\n  useEffect(() => {\n    const handleStorage = () => setSettings(getAppSettings(appId));\n    window.addEventListener('storage', handleStorage);\n    return () => window.removeEventListener('storage', handleStorage);\n  }, [appId]);\n  const formatDate = date => {\n    const options = {\n      weekday: 'long',\n      month: settings.format === 'short' ? 'short' : 'long',\n      day: 'numeric'\n    };\n    if (settings.showYear) {\n      options.year = 'numeric';\n    }\n    return date.toLocaleDateString([], options);\n  };\n  const fontSize = useMemo(() => {\n    const safeW = Math.max(1, width);\n    const safeH = Math.max(1, height);\n    // Assume average date length ~ 18 chars with spaces\n    const estChars = 18;\n    const charWidthFactor = 0.52;\n    const byWidth = safeW * 0.96 / (estChars * charWidthFactor);\n    const byHeight = safeH * 0.6;\n    return Math.max(16, Math.min(72, Math.floor(Math.min(byWidth, byHeight))));\n  }, [width, height]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"w-full h-full flex items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"font-light leading-none\",\n        style: {\n          fontSize: `${fontSize}px`,\n          color: 'white'\n        },\n        children: [formatDate(date), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-1 align-middle inline-block rounded-full\",\n          style: {\n            background: theme.accent,\n            width: Math.max(4, fontSize * 0.12),\n            height: Math.max(4, fontSize * 0.12)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(DateApp, \"O0X1fGlkHQPj36P2HaRZEQDhq2I=\", false, function () {\n  return [useTheme, useElementSize];\n});\n_c = DateApp;\nexport default DateApp;\nvar _c;\n$RefreshReg$(_c, \"DateApp\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","getAppSettings","useTheme","useElementSize","jsxDEV","_jsxDEV","DateApp","appId","_s","date","setDate","Date","settings","setSettings","theme","ref","width","height","timer","setInterval","clearInterval","handleStorage","window","addEventListener","removeEventListener","formatDate","options","weekday","month","format","day","showYear","year","toLocaleDateString","fontSize","safeW","Math","max","safeH","estChars","charWidthFactor","byWidth","byHeight","min","floor","className","children","style","color","background","accent","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shaku/Documents/React JS Apps/Reflect/src/apps/DateApp.jsx"],"sourcesContent":["import React, { useMemo, useState, useEffect } from 'react';\r\nimport { getAppSettings } from '../data/apps';\r\nimport { useTheme } from '../context/ThemeContext';\r\nimport { useElementSize } from '../hooks/useElementSize';\r\n\r\nconst DateApp = ({ appId = 'date' }) => {\r\n  const [date, setDate] = useState(new Date());\r\n  const [settings, setSettings] = useState(getAppSettings(appId));\r\n  const { theme } = useTheme();\r\n  const { ref, width, height } = useElementSize();\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setDate(new Date());\r\n    }, 60000); // Update every minute\r\n\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSettings(getAppSettings(appId));\r\n  }, [appId]);\r\n\r\n  // Live update when settings change elsewhere\r\n  useEffect(() => {\r\n    const handleStorage = () => setSettings(getAppSettings(appId));\r\n    window.addEventListener('storage', handleStorage);\r\n    return () => window.removeEventListener('storage', handleStorage);\r\n  }, [appId]);\r\n\r\n  const formatDate = (date) => {\r\n    const options = {\r\n      weekday: 'long',\r\n      month: settings.format === 'short' ? 'short' : 'long',\r\n      day: 'numeric'\r\n    };\r\n\r\n    if (settings.showYear) {\r\n      options.year = 'numeric';\r\n    }\r\n\r\n    return date.toLocaleDateString([], options);\r\n  };\r\n\r\n  const fontSize = useMemo(() => {\r\n    const safeW = Math.max(1, width);\r\n    const safeH = Math.max(1, height);\r\n    // Assume average date length ~ 18 chars with spaces\r\n    const estChars = 18;\r\n    const charWidthFactor = 0.52;\r\n    const byWidth = (safeW * 0.96) / (estChars * charWidthFactor);\r\n    const byHeight = safeH * 0.6;\r\n    return Math.max(16, Math.min(72, Math.floor(Math.min(byWidth, byHeight))));\r\n  }, [width, height]);\r\n\r\n  return (\r\n    <div ref={ref} className=\"w-full h-full flex items-center justify-center\">\r\n      <div className=\"text-center\">\r\n        <div className=\"font-light leading-none\" style={{ fontSize: `${fontSize}px`, color: 'white' }}>\r\n          {formatDate(date)}\r\n          <span className=\"ml-1 align-middle inline-block rounded-full\" style={{ background: theme.accent, width: Math.max(4, fontSize * 0.12), height: Math.max(4, fontSize * 0.12) }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DateApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}