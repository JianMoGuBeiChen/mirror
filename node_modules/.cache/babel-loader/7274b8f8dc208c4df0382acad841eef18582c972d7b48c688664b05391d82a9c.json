{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useRef, useState } from 'react';\nexport function useElementSize() {\n  _s();\n  const ref = useRef(null);\n  const [size, setSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const handleResize = useCallback(entries => {\n    for (const entry of entries) {\n      const {\n        width,\n        height\n      } = entry.contentRect || {};\n      if (typeof width === 'number' && typeof height === 'number') {\n        setSize({\n          width,\n          height\n        });\n      }\n    }\n  }, []);\n  useEffect(() => {\n    if (!ref.current) return;\n    const observer = new ResizeObserver(handleResize);\n    observer.observe(ref.current);\n    // Initialize once\n    const rect = ref.current.getBoundingClientRect();\n    setSize({\n      width: rect.width,\n      height: rect.height\n    });\n    return () => observer.disconnect();\n  }, [handleResize]);\n  return {\n    ref,\n    width: size.width,\n    height: size.height\n  };\n}\n_s(useElementSize, \"Xq6Pb1KJB3iWSNLyjIiv4C4hmIw=\");","map":{"version":3,"names":["useCallback","useEffect","useRef","useState","useElementSize","_s","ref","size","setSize","width","height","handleResize","entries","entry","contentRect","current","observer","ResizeObserver","observe","rect","getBoundingClientRect","disconnect"],"sources":["C:/Users/shaku/Documents/React JS Apps/Reflect/src/hooks/useElementSize.js"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nexport function useElementSize() {\r\n  const ref = useRef(null);\r\n  const [size, setSize] = useState({ width: 0, height: 0 });\r\n\r\n  const handleResize = useCallback((entries) => {\r\n    for (const entry of entries) {\r\n      const { width, height } = entry.contentRect || {};\r\n      if (typeof width === 'number' && typeof height === 'number') {\r\n        setSize({ width, height });\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!ref.current) return;\r\n    const observer = new ResizeObserver(handleResize);\r\n    observer.observe(ref.current);\r\n    // Initialize once\r\n    const rect = ref.current.getBoundingClientRect();\r\n    setSize({ width: rect.width, height: rect.height });\r\n    return () => observer.disconnect();\r\n  }, [handleResize]);\r\n\r\n  return { ref, width: size.width, height: size.height };\r\n}\r\n\r\n\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEhE,OAAO,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAMC,GAAG,GAAGJ,MAAM,CAAC,IAAI,CAAC;EACxB,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC;IAAEM,KAAK,EAAE,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,CAAC;EAEzD,MAAMC,YAAY,GAAGX,WAAW,CAAEY,OAAO,IAAK;IAC5C,KAAK,MAAMC,KAAK,IAAID,OAAO,EAAE;MAC3B,MAAM;QAAEH,KAAK;QAAEC;MAAO,CAAC,GAAGG,KAAK,CAACC,WAAW,IAAI,CAAC,CAAC;MACjD,IAAI,OAAOL,KAAK,KAAK,QAAQ,IAAI,OAAOC,MAAM,KAAK,QAAQ,EAAE;QAC3DF,OAAO,CAAC;UAAEC,KAAK;UAAEC;QAAO,CAAC,CAAC;MAC5B;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAENT,SAAS,CAAC,MAAM;IACd,IAAI,CAACK,GAAG,CAACS,OAAO,EAAE;IAClB,MAAMC,QAAQ,GAAG,IAAIC,cAAc,CAACN,YAAY,CAAC;IACjDK,QAAQ,CAACE,OAAO,CAACZ,GAAG,CAACS,OAAO,CAAC;IAC7B;IACA,MAAMI,IAAI,GAAGb,GAAG,CAACS,OAAO,CAACK,qBAAqB,CAAC,CAAC;IAChDZ,OAAO,CAAC;MAAEC,KAAK,EAAEU,IAAI,CAACV,KAAK;MAAEC,MAAM,EAAES,IAAI,CAACT;IAAO,CAAC,CAAC;IACnD,OAAO,MAAMM,QAAQ,CAACK,UAAU,CAAC,CAAC;EACpC,CAAC,EAAE,CAACV,YAAY,CAAC,CAAC;EAElB,OAAO;IAAEL,GAAG;IAAEG,KAAK,EAAEF,IAAI,CAACE,KAAK;IAAEC,MAAM,EAAEH,IAAI,CAACG;EAAO,CAAC;AACxD;AAACL,EAAA,CAxBeD,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}