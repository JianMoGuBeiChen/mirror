{"ast":null,"code":"const GENERAL_KEY = 'smartMirrorGeneral';\nconst DEFAULTS = {\n  glowMode: 'on',\n  // 'on' | 'off' | 'hover'\n  mirrorEnabled: true,\n  backgroundStyle: 'black' // 'black' | 'frosted' | 'liquid' | 'arctic' | 'ember' | 'smoke'\n};\n\n// Helper to get settings from either localStorage or global settings API\nconst getRawSettings = () => {\n  try {\n    const {\n      globalSettings\n    } = require('../utils/globalSettings');\n    return globalSettings.getSetting(GENERAL_KEY);\n  } catch (e) {\n    return localStorage.getItem(GENERAL_KEY);\n  }\n};\n\n// Helper to save settings to both localStorage and global settings API\nconst saveRawSettings = value => {\n  localStorage.setItem(GENERAL_KEY, value);\n  try {\n    const {\n      globalSettings\n    } = require('../utils/globalSettings');\n    globalSettings.updateSetting(GENERAL_KEY, value);\n  } catch (e) {\n    // Fallback to localStorage only\n  }\n};\nexport const getGeneralSettings = () => {\n  try {\n    const raw = getRawSettings();\n    const parsed = raw ? JSON.parse(raw) : {};\n    return {\n      ...DEFAULTS,\n      ...parsed\n    };\n  } catch {\n    return {\n      ...DEFAULTS\n    };\n  }\n};\nexport const saveGeneralSettings = partial => {\n  const current = getGeneralSettings();\n  const next = {\n    ...current,\n    ...partial\n  };\n  saveRawSettings(JSON.stringify(next));\n};","map":{"version":3,"names":["GENERAL_KEY","DEFAULTS","glowMode","mirrorEnabled","backgroundStyle","getRawSettings","globalSettings","require","getSetting","e","localStorage","getItem","saveRawSettings","value","setItem","updateSetting","getGeneralSettings","raw","parsed","JSON","parse","saveGeneralSettings","partial","current","next","stringify"],"sources":["C:/Users/shaku/Documents/React JS Apps/Reflect/src/data/general.js"],"sourcesContent":["const GENERAL_KEY = 'smartMirrorGeneral';\r\n\r\nconst DEFAULTS = {\r\n  glowMode: 'on', // 'on' | 'off' | 'hover'\r\n  mirrorEnabled: true,\r\n  backgroundStyle: 'black', // 'black' | 'frosted' | 'liquid' | 'arctic' | 'ember' | 'smoke'\r\n};\r\n\r\n// Helper to get settings from either localStorage or global settings API\r\nconst getRawSettings = () => {\r\n  try {\r\n    const { globalSettings } = require('../utils/globalSettings');\r\n    return globalSettings.getSetting(GENERAL_KEY);\r\n  } catch (e) {\r\n    return localStorage.getItem(GENERAL_KEY);\r\n  }\r\n};\r\n\r\n// Helper to save settings to both localStorage and global settings API\r\nconst saveRawSettings = (value) => {\r\n  localStorage.setItem(GENERAL_KEY, value);\r\n  \r\n  try {\r\n    const { globalSettings } = require('../utils/globalSettings');\r\n    globalSettings.updateSetting(GENERAL_KEY, value);\r\n  } catch (e) {\r\n    // Fallback to localStorage only\r\n  }\r\n};\r\n\r\nexport const getGeneralSettings = () => {\r\n  try {\r\n    const raw = getRawSettings();\r\n    const parsed = raw ? JSON.parse(raw) : {};\r\n    return { ...DEFAULTS, ...parsed };\r\n  } catch {\r\n    return { ...DEFAULTS };\r\n  }\r\n};\r\n\r\nexport const saveGeneralSettings = (partial) => {\r\n  const current = getGeneralSettings();\r\n  const next = { ...current, ...partial };\r\n  saveRawSettings(JSON.stringify(next));\r\n};\r\n\r\n\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,oBAAoB;AAExC,MAAMC,QAAQ,GAAG;EACfC,QAAQ,EAAE,IAAI;EAAE;EAChBC,aAAa,EAAE,IAAI;EACnBC,eAAe,EAAE,OAAO,CAAE;AAC5B,CAAC;;AAED;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,IAAI;IACF,MAAM;MAAEC;IAAe,CAAC,GAAGC,OAAO,CAAC,yBAAyB,CAAC;IAC7D,OAAOD,cAAc,CAACE,UAAU,CAACR,WAAW,CAAC;EAC/C,CAAC,CAAC,OAAOS,CAAC,EAAE;IACV,OAAOC,YAAY,CAACC,OAAO,CAACX,WAAW,CAAC;EAC1C;AACF,CAAC;;AAED;AACA,MAAMY,eAAe,GAAIC,KAAK,IAAK;EACjCH,YAAY,CAACI,OAAO,CAACd,WAAW,EAAEa,KAAK,CAAC;EAExC,IAAI;IACF,MAAM;MAAEP;IAAe,CAAC,GAAGC,OAAO,CAAC,yBAAyB,CAAC;IAC7DD,cAAc,CAACS,aAAa,CAACf,WAAW,EAAEa,KAAK,CAAC;EAClD,CAAC,CAAC,OAAOJ,CAAC,EAAE;IACV;EAAA;AAEJ,CAAC;AAED,OAAO,MAAMO,kBAAkB,GAAGA,CAAA,KAAM;EACtC,IAAI;IACF,MAAMC,GAAG,GAAGZ,cAAc,CAAC,CAAC;IAC5B,MAAMa,MAAM,GAAGD,GAAG,GAAGE,IAAI,CAACC,KAAK,CAACH,GAAG,CAAC,GAAG,CAAC,CAAC;IACzC,OAAO;MAAE,GAAGhB,QAAQ;MAAE,GAAGiB;IAAO,CAAC;EACnC,CAAC,CAAC,MAAM;IACN,OAAO;MAAE,GAAGjB;IAAS,CAAC;EACxB;AACF,CAAC;AAED,OAAO,MAAMoB,mBAAmB,GAAIC,OAAO,IAAK;EAC9C,MAAMC,OAAO,GAAGP,kBAAkB,CAAC,CAAC;EACpC,MAAMQ,IAAI,GAAG;IAAE,GAAGD,OAAO;IAAE,GAAGD;EAAQ,CAAC;EACvCV,eAAe,CAACO,IAAI,CAACM,SAAS,CAACD,IAAI,CAAC,CAAC;AACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}